<?php

use Symfony\Component\Routing\RequestContext;
use Symfony\Component\Routing\Exception\RouteNotFoundException;
use Psr\Log\LoggerInterface;

/**
 * appProdProjectContainerUrlGenerator
 *
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class appProdProjectContainerUrlGenerator extends Symfony\Component\Routing\Generator\UrlGenerator
{
    private static $declaredRoutes;

    /**
     * Constructor.
     */
    public function __construct(RequestContext $context, LoggerInterface $logger = null)
    {
        $this->context = $context;
        $this->logger = $logger;
        if (null === self::$declaredRoutes) {
            self::$declaredRoutes = array(
        'botella_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'BotellaBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'botella_bio' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'BotellaBundle\\Controller\\DefaultController::biographyAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/biography',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'botella_gallery' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'BotellaBundle\\Controller\\PaintingController::galleryAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/gallery',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'botella_videos' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'BotellaBundle\\Controller\\MovieController::galleryAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/videos',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'botella_expositions' => array (  0 =>   array (    0 => 'page',  ),  1 =>   array (    '_controller' => 'BotellaBundle\\Controller\\ArticleController::menuAction',    'page' => 1,    'requirements' =>     array (      'page' => '\\d*',    ),  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/expositions',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'botella_contact' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'BotellaBundle\\Controller\\DefaultController::contactAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/contact',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'blog_view' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'BotellaBundle\\Controller\\ArticleController::viewAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/article',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'botella_legal' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'BotellaBundle\\Controller\\DefaultController::legalAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/mentions_legales',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'blog_backoffice' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'BotellaBundle\\Controller\\DefaultController::menubackAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'blog_add' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'BotellaBundle\\Controller\\ArticleController::addAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back/add',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'blog_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'BotellaBundle\\Controller\\ArticleController::editAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/back/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'blog_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'BotellaBundle\\Controller\\ArticleController::deleteAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/back/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'article_list' => array (  0 =>   array (    0 => 'page',  ),  1 =>   array (    '_controller' => 'BotellaBundle\\Controller\\ArticleController::listPostsAction',    'page' => 1,    'requirements' =>     array (      'page' => '\\d*',    ),  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/back/list_articles',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'article_view' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'BotellaBundle\\Controller\\ArticleController::detailPostAction',  ),  2 =>   array (    'id' => '\\d*',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d*',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/back/article',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'painting_list' => array (  0 =>   array (    0 => 'page',  ),  1 =>   array (    '_controller' => 'BotellaBundle\\Controller\\PaintingController::listPaintingsAction',    'page' => 1,    'requirements' =>     array (      'page' => '\\d*',    ),  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/back/list_paintings',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'painting_view' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'BotellaBundle\\Controller\\PaintingController::viewAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/back',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'painting_add' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'BotellaBundle\\Controller\\PaintingController::addAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back/add_painting',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'painting_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'BotellaBundle\\Controller\\PaintingController::editAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/back/edit_painting',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'painting_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'BotellaBundle\\Controller\\PaintingController::deleteAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/back/delete_painting',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'serie_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'BotellaBundle\\Controller\\PaintingController::listSeriesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back/series',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'serie_add' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'BotellaBundle\\Controller\\PaintingController::addSerieAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back/add_serie',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'serie_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'BotellaBundle\\Controller\\PaintingController::editSerieAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/back/edit_serie',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'serie_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'BotellaBundle\\Controller\\PaintingController::deleteSerieAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/back/delete_serie',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'movie_add' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'BotellaBundle\\Controller\\MovieController::addAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back/add_movie',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'movie_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'BotellaBundle\\Controller\\MovieController::deleteAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/back/delete_movie',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'list_movies' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'BotellaBundle\\Controller\\MovieController::listMoviesAction',    'page' => 1,    'requirements' => '\\d*',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back/movies',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'movie_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'BotellaBundle\\Controller\\MovieController::editMovieAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/back/edit_movie',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::loginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_check' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::checkAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login_check',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_logout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::logoutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/logout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_show' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ProfileController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back/profile/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_edit' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ProfileController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back/profile/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_register' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::registerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::checkEmailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirm' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::confirmAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/register/confirm',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirmed' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::confirmedAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/confirmed',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_request' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::requestAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back/resetting/request',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_send_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::sendEmailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back/resetting/send-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::checkEmailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back/resetting/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_reset' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::resetAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/back/resetting/reset',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_change_password' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ChangePasswordController::changePasswordAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back/change_password/change-password',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
    );
        }
    }

    public function generate($name, $parameters = array(), $referenceType = self::ABSOLUTE_PATH)
    {
        if (!isset(self::$declaredRoutes[$name])) {
            throw new RouteNotFoundException(sprintf('Unable to generate a URL for the named route "%s" as such route does not exist.', $name));
        }

        list($variables, $defaults, $requirements, $tokens, $hostTokens, $requiredSchemes) = self::$declaredRoutes[$name];

        return $this->doGenerate($variables, $defaults, $requirements, $tokens, $parameters, $name, $referenceType, $hostTokens, $requiredSchemes);
    }
}
